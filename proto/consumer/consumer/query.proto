syntax = "proto3";
package consumer.consumer;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "consumer/consumer/params.proto";
// this line is used by starport scaffolding # 1

option go_package = "consumer/x/consumer/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/consumer/consumer/params";
  }
  rpc Price(QueryPriceRequest) returns (QueryPriceResponse) {
    option (google.api.http).get = "/consumer/consumer/price/{symbol}";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [ (gogoproto.nullable) = false ];
}

message QueryPriceRequest { string symbol = 1; }

// QueryCountsResponse is response type for the Query/Count RPC method.
message QueryPriceResponse {
  string symbol = 1;
  uint64 price = 2;
  int64 resolve_time = 3;
}
